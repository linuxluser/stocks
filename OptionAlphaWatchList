#!/usr/bin/python3


import argparse
import datetime

import colors
import optionalpha
import printing


MEGAPHONE_EMOJI = '\U0001f4e3'
EXPECTED_RANGE_WIDTH = 21


def FormatEarnings(earnings_date):
  if earnings_date is None:
    return ''
  today = datetime.date.today()
  if (earnings_date - today).days < 8:
    return f'{earnings_date} {MEGAPHONE_EMOJI}'
  return str(earnings_date)


def FormatExpectedRange(lower, upper):
  lower_str = '${:.2f}'.format(lower)
  upper_str = '${:.2f}'.format(upper)
  pad_size = EXPECTED_RANGE_WIDTH - 2 - len(lower_str) - len(upper_str)
  return '[{}{}{}]'.format(lower_str, '-'.center(pad_size), upper_str)


def main(args):
  headers = ['TICKER', 'IV RANK', 'PRICE', 'EXPECTED MONTH RANGE', 'EARNINGS']
  widths = [6, 7, 8, EXPECTED_RANGE_WIDTH, 12]
  printer = printing.TabularPrinter(headers=headers, widths=widths)
  watch_list = optionalpha.GetWatchList()
  def rows():
    for item in watch_list:
      if item.rank < 30:
        paint = colors.PaintLightRed
      elif item.rank >= 30 and item.rank < 50:
        paint = colors.PaintLightYellow
      else:
        paint = colors.PaintLightCyan
      yield (paint(item.ticker),
             paint(item.rank),
             paint(item.price),
             paint(FormatExpectedRange(*item.expected_ranges['month'])),
             paint(FormatEarnings(item.earnings_date)))
  printer.print(rows())


if __name__ == '__main__':
  parser = argparse.ArgumentParser()
  args = parser.parse_args()
  main(args)
